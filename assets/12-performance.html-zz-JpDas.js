import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,e as o}from"./app-CgZv1aOY.js";const l={},a=o('<h1 id="页面性能" tabindex="-1"><a class="header-anchor" href="#页面性能"><span>页面性能</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如何优化页面性能？浏览器缓存？</p></div><h2 id="常用优化方法" tabindex="-1"><a class="header-anchor" href="#常用优化方法"><span>常用优化方法</span></a></h2><ul><li><p>资源压缩合并，减少 HTTP 请求</p></li><li><p>非核心代码异步加载，提高加载速度</p><ul><li>动态脚本加载，动态创建 script 节点</li><li><code>defer</code>，HTML 解析完再执行，按照加载顺序依次执行</li><li><code>async</code>，脚本加载完立即执行，执行顺序与加载顺序无关</li></ul></li><li><p>浏览器缓存</p></li><li><p>CDN内容分发网络，将资源部署到世界各地，用户在访问时按照就近原则访问资源</p></li><li><p>预解析 DNS</p><ul><li><code>&lt;meta http-equiv=&quot;x-dns-predetch-control&quot; content = &quot;on&quot;&gt;</code>，一般默认打开，HTTPS 默认关闭，此处可以强制打开 dns 预解析</li><li><code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//host_name_to_prefetch&quot;&gt;</code>预解析 dns</li></ul></li><li><p>使用 SSR 服务端渲染，直接返回 HTML 页面</p></li></ul><h2 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存"><span>缓存</span></a></h2><ul><li><p>强制缓存</p><ul><li>服务器通知浏览器一个缓存时间，在缓存时间内，下次请求，直接用缓存，不在时间内，执行协商缓存策略</li><li><code>Cache-Control: max-age</code> 相对时间长度</li><li><code>Expires</code> 服务器绝对时间点</li></ul></li><li><p>协商缓存</p><ul><li>将缓存信息中的 Etag 和 Last-Modified 通过请求发送给服务器，由服务器校验，返回 304 状态码时，浏览器直接使用缓存</li><li><code>If-None-Match(Etag)</code> tag 唯一哈希值</li><li><code>If-Modified-Since(Last-Modified)</code> 修改时间</li></ul></li></ul>',6),n=[a];function r(c,p){return t(),i("div",null,n)}const h=e(l,[["render",r],["__file","12-performance.html.vue"]]),m=JSON.parse('{"path":"/interview/outline/12-performance.html","title":"页面性能","lang":"zh-CN","frontmatter":{"category":"性能优化","description":"页面性能 提示 如何优化页面性能？浏览器缓存？ 常用优化方法 资源压缩合并，减少 HTTP 请求 非核心代码异步加载，提高加载速度 动态脚本加载，动态创建 script 节点 defer，HTML 解析完再执行，按照加载顺序依次执行 async，脚本加载完立即执行，执行顺序与加载顺序无关 浏览器缓存 CDN内容分发网络，将资源部署到世界各地，用户在访问...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/fe-handbook/interview/outline/12-performance.html"}],["meta",{"property":"og:site_name","content":"HC的前端手册"}],["meta",{"property":"og:title","content":"页面性能"}],["meta",{"property":"og:description","content":"页面性能 提示 如何优化页面性能？浏览器缓存？ 常用优化方法 资源压缩合并，减少 HTTP 请求 非核心代码异步加载，提高加载速度 动态脚本加载，动态创建 script 节点 defer，HTML 解析完再执行，按照加载顺序依次执行 async，脚本加载完立即执行，执行顺序与加载顺序无关 浏览器缓存 CDN内容分发网络，将资源部署到世界各地，用户在访问..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-18T10:45:41.000Z"}],["meta",{"property":"article:author","content":"Mr.HC"}],["meta",{"property":"article:modified_time","content":"2024-02-18T10:45:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"页面性能\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-18T10:45:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.HC\\"}]}"]]},"headers":[{"level":2,"title":"常用优化方法","slug":"常用优化方法","link":"#常用优化方法","children":[]},{"level":2,"title":"缓存","slug":"缓存","link":"#缓存","children":[]}],"git":{"createdTime":1708253141000,"updatedTime":1708253141000,"contributors":[{"name":"LuoHuacheng","email":"154224099@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":339},"filePathRelative":"interview/outline/12-performance.md","localizedDate":"2024年2月18日","autoDesc":true}');export{h as comp,m as data};
