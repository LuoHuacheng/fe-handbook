import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as l,e as i}from"./app--uKMlBPf.js";const a={},r=i('<h1 id="http" tabindex="-1"><a class="header-anchor" href="#http"><span>HTTP</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>什么是 HTTP？有什么特点？如何做持久连接？GET 和 POST 区别？</p></div><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><p>HTTP 缩写于 Hyper Text Transfer Protocol(超文本传输协议)，基于 TCP/IP 通信协议，属于其应用层，用于从服务器传输超文本到本地浏览器。</p><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><ol><li>无连接：在客户端与服务器交互完后，就断开连接，可以节省传输的时间</li><li>无状态：对事务的处理没有记忆能力，如果需要上一次的数据，需要重新上传</li><li>简单快速：客户向服务器请求方法的时候，只要传送请求方法和路径</li><li>灵活：HTTP 允许传输任意类型的数据对象</li></ol><h2 id="报文组成" tabindex="-1"><a class="header-anchor" href="#报文组成"><span>报文组成</span></a></h2><h3 id="请求报文" tabindex="-1"><a class="header-anchor" href="#请求报文"><span>请求报文</span></a></h3><ul><li>请求行：包括请求方法、地址、协议版本(方法一般有 <em>GET、POST、HEAD、PUT、DELETE、OPTIONS</em>)</li><li>请求头：头部字段名与对应值</li><li>空行</li><li>请求数据</li></ul><h3 id="响应报文" tabindex="-1"><a class="header-anchor" href="#响应报文"><span>响应报文</span></a></h3><ul><li>状态行：协议版本、状态码</li><li>空行</li><li>响应数据</li></ul><p>状态码</p><ul><li>1xx：服务器接收客户端请求，客户端可以继续发送请求</li><li>2xx：服务器接收客户端请求并进行处理 <ul><li>200：ok 客户端的请求成功接收、解析</li><li>204：No Content 服务器已接收请求且不必返回数据，一般 options 请求会产生</li></ul></li><li>3xx：服务器要求客户端重定向：要求用户进一步细化请求 <ul><li>301：永久重定向</li><li>302：临时重定向</li><li>304：命中缓存</li></ul></li><li>4xx：客户端请求非法：客户错误 <ul><li>400：Bad Request 客户端请求语法有误，一般是传参错误</li><li>401：Unauthorized 请求未经授权，须与 WWW-Authenticate 报头域一起使用</li><li>403：Forbidden 服务器收到但拒绝服务，通常会给出原因</li><li>404：Not Found 请求的资源不存在，通常是请求地址有误</li></ul></li><li>5xx：服务器未能正常处理客户端的请求而出现意外：服务器发生错误 <ul><li>500：Internal Server Error 服务器内部错误</li><li>503：Service Unavailable 服务器当前不能处理请求，后期可能会恢复</li></ul></li></ul><h2 id="持久连接" tabindex="-1"><a class="header-anchor" href="#持久连接"><span>持久连接</span></a></h2><ul><li>HTTP/1.0 keep-alive，报文头部添加 Connection: Keep-Alive 以激活</li><li>HTTP/1.1 persistent，HTTP/1.1 默认激活，若想关闭则需在报文头部添加 Connection：close</li><li>pipeline 管道化 <ul><li>在响应到达之前，就可以将多条请求放入队列，然后一条一条发送，无需等待前一条的相应返回</li><li>客户端必须确认是持久连接才能使用管道</li><li>如果对请求/响应顺序敏感的话，需要客户端与服务端自定义顺序编号</li><li>客户端必须有出错重试机制：如果客户端打开了一条持久连接，并立即发出了 10 条请求，服务器可能在只处理了 5 条请求后关闭连接。剩下的 5 条请求会失败，客户端必须能够应对这些过早关闭连接的情况，重新发出这些请求</li><li>尽量使用管道化的方式发送幂等请求（在正确实现的条件下，GET、HEAD、PUT 和 DELETE 等方法都是幂等的，而 POST 方法不是）</li></ul></li><li>WebSocket <ul><li>建立在 HTTP 基础上的协议，因此连接的发起方仍然是客户端</li><li>由于是双向通信，因此服务端可以做信息推送</li><li>一直保持连接状态，也就是持久连接</li></ul></li></ul><h2 id="get-与-post-区别" tabindex="-1"><a class="header-anchor" href="#get-与-post-区别"><span>GET 与 POST 区别</span></a></h2><table><thead><tr><th>GET</th><th>POST</th></tr></thead><tbody><tr><td>浏览器后退无刷新/无害，不重复发请求</td><td>浏览器后退会重复发送请求</td></tr><tr><td>地址可以收藏为书签</td><td>地址不可被收藏为书签</td></tr><tr><td>可以被浏览器缓存</td><td>不可被缓存</td></tr><tr><td>参数会保留在浏览器历史中</td><td>参数不保留</td></tr><tr><td>通过 url 传递数据，长度限制约 2kb</td><td>通过 body 传递数据，大小无限制</td></tr><tr><td>通过 application/x-www-form-urlencoded 编码</td><td>通过 urlencoded/json/form-data 等多种方式编码</td></tr><tr><td>只允许传递 ASCII 字符</td><td>传递数据类型无限制，可传递二进制数据</td></tr></tbody></table><p>总结:</p><ul><li>GET 用于获取信息，是无副作用的，是幂等的，且可缓存</li><li>POST 用于修改服务器上的数据，有副作用，非幂等，不可缓存</li><li>本质上没有区别，都是基于 TCP/IP 协议的 HTTP 请求，只是报文格式不同</li><li>POST 也并不比 GET 安全，因为 HTTP 在网络上明文传输，想要安全就用 HTTPS</li><li>传输数据长度限制也并非 HTTP 协议规定，而是由浏览器与服务器限制</li></ul>',19),n=[r];function o(d,p){return e(),l("div",null,n)}const h=t(a,[["render",o],["__file","4-http.html.vue"]]),T=JSON.parse('{"path":"/interview/outline/4-http.html","title":"HTTP","lang":"zh-CN","frontmatter":{"category":"HTTP","description":"HTTP 提示 什么是 HTTP？有什么特点？如何做持久连接？GET 和 POST 区别？ 定义 HTTP 缩写于 Hyper Text Transfer Protocol(超文本传输协议)，基于 TCP/IP 通信协议，属于其应用层，用于从服务器传输超文本到本地浏览器。 特点 无连接：在客户端与服务器交互完后，就断开连接，可以节省传输的时间 无状态：...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/my-docs/interview/outline/4-http.html"}],["meta",{"property":"og:site_name","content":"HC的前端手册"}],["meta",{"property":"og:title","content":"HTTP"}],["meta",{"property":"og:description","content":"HTTP 提示 什么是 HTTP？有什么特点？如何做持久连接？GET 和 POST 区别？ 定义 HTTP 缩写于 Hyper Text Transfer Protocol(超文本传输协议)，基于 TCP/IP 通信协议，属于其应用层，用于从服务器传输超文本到本地浏览器。 特点 无连接：在客户端与服务器交互完后，就断开连接，可以节省传输的时间 无状态：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-18T10:45:41.000Z"}],["meta",{"property":"article:author","content":"Mr.HC"}],["meta",{"property":"article:modified_time","content":"2024-02-18T10:45:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-18T10:45:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.HC\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"报文组成","slug":"报文组成","link":"#报文组成","children":[{"level":3,"title":"请求报文","slug":"请求报文","link":"#请求报文","children":[]},{"level":3,"title":"响应报文","slug":"响应报文","link":"#响应报文","children":[]}]},{"level":2,"title":"持久连接","slug":"持久连接","link":"#持久连接","children":[]},{"level":2,"title":"GET 与 POST 区别","slug":"get-与-post-区别","link":"#get-与-post-区别","children":[]}],"git":{"createdTime":1708253141000,"updatedTime":1708253141000,"contributors":[{"name":"LuoHuacheng","email":"154224099@qq.com","commits":1}]},"readingTime":{"minutes":3.77,"words":1132},"filePathRelative":"interview/outline/4-http.md","localizedDate":"2024年2月18日","autoDesc":true}');export{h as comp,T as data};
