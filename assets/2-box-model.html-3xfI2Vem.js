import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c as o,a as n,b as a,d as i,e as s}from"./app-D0SJy2ik.js";const c={},u=s('<h1 id="盒模型与bfc" tabindex="-1"><a class="header-anchor" href="#盒模型与bfc"><span>盒模型与BFC</span></a></h1><h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型"><span>盒模型</span></a></h2><ul><li>盒模型是 CSS 规范中的一个模块，规定浏览器渲染时将所有元素表示为一个个矩形的盒子（box）。CSS 决定这些盒子的大小、位置以及属性。</li><li>盒模型从内到外分为 width/height -&gt; padding -&gt; border -&gt; margin</li></ul><h3 id="如何设置" tabindex="-1"><a class="header-anchor" href="#如何设置"><span>如何设置</span></a></h3><p>通过 CSS 属性 <em>box-sizing: content-box | border-box | inherit;</em> 来设置</p><h3 id="w3c-标准盒模型" tabindex="-1"><a class="header-anchor" href="#w3c-标准盒模型"><span>W3C 标准盒模型</span></a></h3><p>属性 width，height 只包含内容 content，不包含 border 和 padding，其 <em>box-sizing</em> 属性是 <em>content-box</em></p><h3 id="ie-怪异盒模型" tabindex="-1"><a class="header-anchor" href="#ie-怪异盒模型"><span>IE 怪异盒模型</span></a></h3><p>属性 width，height 包含 border 和 padding，指的是 <em>content + padding + border</em> ，其 <em>box-sizing</em> 属性是 <em>border-box</em></p><h2 id="获取元素尺寸" tabindex="-1"><a class="header-anchor" href="#获取元素尺寸"><span>获取元素尺寸</span></a></h2><ul><li><code>dom.style.width/height</code> 只能获取内联样式</li><li><code>dom.currentStyle.width/height</code> 获取所有样式宽高，只有 IE 支持</li><li><code>window.getComputedStyle(dom)</code> 获取所有样式宽高，现代浏览器支持</li><li><code>dom.getBoundingClientRect()</code> 返回元素的宽高及相对于视口的位置</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>浏览器渲染页面是根据 html 页面头部的 <em>DOCTYPE</em> 声明来执行的，所以开发时一定要声明页面的 <em>DOCTYPE</em></p></div><h2 id="bfc" tabindex="-1"><a class="header-anchor" href="#bfc"><span>BFC</span></a></h2><p>BFC 是块级格式化上下文（Block formatting context）的缩写，具有 BFC 特性的元素可以看作是隔离的独立容器，容器里面的元素在布局上不会影响外面的元素，并且 BFC 具有普通容器所没有的一些特性</p><h3 id="生成条件" tabindex="-1"><a class="header-anchor" href="#生成条件"><span>生成条件</span></a></h3><ul><li>根元素（html）</li><li>float 不为 none 的元素</li><li>overflow 不为 visible 的元素</li><li>display 为 inline-block、flow-root、table-cell、table-caption 等 table 相关的元素</li><li>position 不为 static、relative、sticky 的元素</li><li>弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）</li><li>网格元素（display 为 grid 或 inline-grid 元素的直接子元素）</li></ul><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><ul><li>BFC 是页面上一个隔离的容器，容器内的子元素不会影响容器外的元素，反之亦然</li><li>内部的 box 会在垂直方向依次排列</li><li>box 垂直方向的距离由 margin 决定，同一 BFC 的相邻 box 会发生 margin 重叠</li><li>BFC 的区域不会与 float box 重叠</li><li>每个元素的 margin box 的左边， 与包含块 border box 的左边相接触(对于从左往右的格式化，否则相反)，即使存在浮动也是如此</li><li>计算 BFC 的高度时，浮动元素也参与计算</li></ul><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h3>',19),r=s(`<li><p>解决边距重叠</p><blockquote><p>处于同一个 BFC 下的盒子外边距会重叠，下方代码中的两个 div 之间的边距 margin 是 50，而不是 100，要解决这个问题，可以将它们放在不同的 BFC 中</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff6600<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>清除内部浮动</p><blockquote><p>BFC 可以包含浮动的元素，利用 BFC 中的元素不影响 BFC 外面元素布局的特性来清除内部浮动</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.parent</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #f33<span class="token punctuation">;</span>
    <span class="token comment">/* 添加此属性创建BFC来清除 child 的浮动 */</span>
    <span class="token comment">/* overflow: hidden; */</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.child</span> <span class="token punctuation">{</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff6600<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>child<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),d=n("p",null,"多栏布局",-1),k={href:"/basic/1-layout.html#%E5%88%9B%E5%BB%BA-bfc",target:"_blank",rel:"noopener noreferrer"};function m(h,g){const t=l("ExternalLinkIcon");return p(),o("div",null,[u,n("ol",null,[r,n("li",null,[d,n("p",null,[a("参考前一章中的"),n("a",k,[a("多栏布局"),i(t)]),a("小节")])])])])}const x=e(c,[["render",m],["__file","2-box-model.html.vue"]]),f=JSON.parse('{"path":"/interview/outline/2-box-model.html","title":"盒模型与BFC","lang":"zh-CN","frontmatter":{"category":"CSS","description":"盒模型与BFC 盒模型 盒模型是 CSS 规范中的一个模块，规定浏览器渲染时将所有元素表示为一个个矩形的盒子（box）。CSS 决定这些盒子的大小、位置以及属性。 盒模型从内到外分为 width/height -> padding -> border -> margin 如何设置 通过 CSS 属性 box-sizing: content-box | ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/my-docs/interview/outline/2-box-model.html"}],["meta",{"property":"og:site_name","content":"HC的前端手册"}],["meta",{"property":"og:title","content":"盒模型与BFC"}],["meta",{"property":"og:description","content":"盒模型与BFC 盒模型 盒模型是 CSS 规范中的一个模块，规定浏览器渲染时将所有元素表示为一个个矩形的盒子（box）。CSS 决定这些盒子的大小、位置以及属性。 盒模型从内到外分为 width/height -> padding -> border -> margin 如何设置 通过 CSS 属性 box-sizing: content-box | ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-18T10:45:41.000Z"}],["meta",{"property":"article:author","content":"Mr.HC"}],["meta",{"property":"article:modified_time","content":"2024-02-18T10:45:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"盒模型与BFC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-18T10:45:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.HC\\"}]}"]]},"headers":[{"level":2,"title":"盒模型","slug":"盒模型","link":"#盒模型","children":[{"level":3,"title":"如何设置","slug":"如何设置","link":"#如何设置","children":[]},{"level":3,"title":"W3C 标准盒模型","slug":"w3c-标准盒模型","link":"#w3c-标准盒模型","children":[]},{"level":3,"title":"IE 怪异盒模型","slug":"ie-怪异盒模型","link":"#ie-怪异盒模型","children":[]}]},{"level":2,"title":"获取元素尺寸","slug":"获取元素尺寸","link":"#获取元素尺寸","children":[]},{"level":2,"title":"BFC","slug":"bfc","link":"#bfc","children":[{"level":3,"title":"生成条件","slug":"生成条件","link":"#生成条件","children":[]},{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]}]}],"git":{"createdTime":1708253141000,"updatedTime":1708253141000,"contributors":[{"name":"LuoHuacheng","email":"154224099@qq.com","commits":1}]},"readingTime":{"minutes":2.56,"words":768},"filePathRelative":"interview/outline/2-box-model.md","localizedDate":"2024年2月18日","autoDesc":true}');export{x as comp,f as data};
